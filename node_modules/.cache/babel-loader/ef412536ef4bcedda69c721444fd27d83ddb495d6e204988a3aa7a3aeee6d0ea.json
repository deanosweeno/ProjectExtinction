{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bengo\\\\OneDrive\\\\Desktop\\\\CS385 Dean\\\\ProjectExtinction\\\\src\\\\PairsComponents\\\\Pairs.js\",\n  _s = $RefreshSig$();\nimport './Pairs.css';\nimport { useEffect, useState } from 'react';\nimport SingleCard from './SingleCard';\nimport PopupPairs from './PopupPairs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Imgs = [{\n  \"src\": \"/PairsImages/01.jpg\",\n  matched: false\n}, {\n  \"src\": \"/PairsImages/02.jpg\",\n  matched: false\n}, {\n  \"src\": \"/PairsImages/03.jpg\",\n  matched: false\n}]; //will call properties from external array here\nfunction Pairs() {\n  _s();\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [turns, setTurns] = useState(0);\n  const [cards, setCards] = useState([]);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const shuffle = () => {\n    const shuffled = [...Imgs, ...Imgs].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    })); // creates pairs of objects and shuffles, while assigning IDs \n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setCards(shuffled);\n    setTurns(0);\n  };\n  const [disabled, setDisabled] = useState(false);\n  const handleChoice = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return {\n                ...card,\n                matched: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        setTimeout(() => resetTurn(), 1200);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n    setDisabled(false);\n  };\n  useEffect(() => {\n    shuffle();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setButtonPopup(true),\n      children: \"Open Pairs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupPairs, {\n      trigger: buttonPopup,\n      setTrigger: setButtonPopup,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: shuffle,\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Grid\",\n        children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n          card: card,\n          handleChoice: handleChoice,\n          flipped: card === choiceOne || card === choiceTwo || card.matched,\n          disabled: disabled\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Turns: \", turns]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Pairs, \"JPirKN3WhbwFDvyRWwfB6BsQFoc=\");\n_c = Pairs;\nexport default Pairs;\nvar _c;\n$RefreshReg$(_c, \"Pairs\");","map":{"version":3,"names":["useEffect","useState","SingleCard","PopupPairs","Imgs","matched","Pairs","buttonPopup","setButtonPopup","turns","setTurns","cards","setCards","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","shuffle","shuffled","sort","Math","random","map","card","id","disabled","setDisabled","handleChoice","src","prevCards","resetTurn","setTimeout","prevTurns"],"sources":["C:/Users/bengo/OneDrive/Desktop/CS385 Dean/ProjectExtinction/src/PairsComponents/Pairs.js"],"sourcesContent":["\r\nimport './Pairs.css';\r\nimport { useEffect, useState } from 'react'\r\nimport SingleCard from './SingleCard'\r\nimport PopupPairs from './PopupPairs'\r\nconst Imgs = [{ \"src\": \"/PairsImages/01.jpg\", matched: false }, { \"src\": \"/PairsImages/02.jpg\", matched: false }, { \"src\": \"/PairsImages/03.jpg\", matched: false }] //will call properties from external array here\r\nfunction Pairs() \r\n{\r\n  const [buttonPopup, setButtonPopup] = useState(false);\r\n  const [turns, setTurns] = useState(0)\r\n  const [cards, setCards] = useState([])\r\n  const [choiceOne, setChoiceOne] = useState(null)\r\n  const [choiceTwo, setChoiceTwo] = useState(null)\r\n  const shuffle = () => {\r\n    const shuffled = [...Imgs, ...Imgs].sort(() => Math.random() - 0.5).map((card) => ({...card, id: Math.random() })) // creates pairs of objects and shuffles, while assigning IDs \r\n    setChoiceOne(null)\r\n    setChoiceTwo(null)\r\n    setCards(shuffled)\r\n    setTurns(0)\r\n  }\r\n  const [disabled, setDisabled] = useState(false)\r\n \r\n const handleChoice = (card) => {choiceOne ? setChoiceTwo(card) : setChoiceOne(card)}\r\n\r\n useEffect(() => \r\n {\r\n  if(choiceOne && choiceTwo)\r\n  {\r\n    setDisabled(true)\r\n    if(choiceOne.src === choiceTwo.src)\r\n    {\r\n      setCards(prevCards => {return prevCards.map(card => {\r\n        if(card.src === choiceOne.src)\r\n        {\r\n          return{...card, matched: true}\r\n        }else{return card}})})\r\n      resetTurn()\r\n    }\r\n    else\r\n    {\r\n      setTimeout(() => resetTurn(), 1200)\r\n    }\r\n  }\r\n}, [choiceOne, choiceTwo])\r\n\r\n const resetTurn = () => {\r\n  setChoiceOne(null)\r\n  setChoiceTwo(null)\r\n  setTurns(prevTurns => prevTurns + 1)\r\n  setDisabled(false)}\r\n\r\n  useEffect(() => {shuffle()}, [])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <button onClick={() => setButtonPopup(true)}>Open Pairs</button> \r\n      <PopupPairs trigger={buttonPopup} setTrigger={setButtonPopup}>   \r\n      <button onClick={shuffle}>Retry</button> \r\n      <div className=\"Grid\">\r\n        {cards.map(card => (\r\n          <SingleCard \r\n          key={card.id} \r\n          card={card} \r\n          handleChoice={handleChoice}\r\n          flipped={card ===choiceOne || card === choiceTwo || card.matched}\r\n          disabled ={disabled}\r\n          />\r\n        ))}\r\n      </div>\r\n      <p>Turns: {turns}</p>\r\n      </PopupPairs>  \r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Pairs;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}